@use "./../composition/breakpoints" as breakpoints;

.lightbox-modal {
  &::backdrop {
    background-color: var(--clr-neutral-715);
    opacity: 0.4;
  }

  &[open] {
    display: grid;

    // gap: var(--space-700);
    justify-items: center;
    align-items: start;

    grid-template-columns:
      [previous-media-start] max-content
      [previous-media-end lightbox-start] auto
      [lightbox-end close-start next-media-start] max-content
      [close-end next-media-end];

    grid-template-rows:
      [close-start lightbox-start] auto
      [close-end previous-media-start next-media-start] auto
      [previous-media-end next-media-end lightbox-end];
  }

  margin-block: var(--space-600);
  border-style: none;
  border-radius: var(--space-300);
  max-height: calc(100% - 2 * var(--space-600));
  padding-block: var(--space-800);
  padding-inline: var(--space-800);

  color: var(--clr-primary);
  background-color: var(--clr-neutral-900);
  font-size: var(--fs-500);

  & .close-button {
    grid-area: close;
  }

  & .lightbox {
    grid-area: lightbox;

    & img,
    & video {
      object-fit: cover;
      aspect-ratio: 1 / 1;
      max-width: calc(100svh - 2 * var(--space-600) - 2 * var(--space-800));
      width: 100%;
      border-radius: var(--space-300);
    }
  }

  & .previous-media-button {
    grid-area: previous-media;
  }

  & .next-media-button {
    grid-area: next-media;
  }

  & [class*="-button"] {
    font-size: var(--fs-800);
    padding: var(--space-500);
    color: inherit;
    background-color: inherit;
    width: max-content;
  }
}

@media (max-width: breakpoints.$lightbox-modal-bp) {
  .lightbox-modal {
    margin-inline: 0;
    margin-block: auto;
    width: 100%;
    max-width: 100%;
  }
}
